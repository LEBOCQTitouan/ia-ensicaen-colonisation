@startuml
'https://plantuml.com/class-diagram

package factories {
        abstract class RobotCommand {}
        abstract class ShockWaveCommand {}
        abstract class PlanetCommand {}
        abstract class WaterpipeCommand {}

        RobotCommandFactory --> RobotCommand
        PlanetCommandFactory --> PlanetCommand
        ShockWaveCommandFactory --> ShockWaveCommand
        WaterpipeCommandFactory --> WaterpipeCommand

        class RobotCommandFactory {
            -planet: Planet
            -robotMapper: RobotMapper
            +createRobotCommand(robotCommandType: RobotCommandType, robot: Robot): RobotCommand
        }

        class ShockWaveCommandFactory {
            -planet: Planet
            +createPropagationShockWaveCommand(shockWave: ShockWave): ShockWaveCommand
        }

        class PlanetCommandFactory {
            -planet: Planet
            -robotMapper: RobotMapper
            +createMutationCommand(localisation: Coordinate): MutatePlanetCommand
        }

        class WaterpipeCommandFactory {
            -planet: Planet
            -waterpipeHandler: WaterpipeHandler
            +createWaterpipeCommand(localisation: Coordinate): WaterpipeCommand
        }

        enum RobotCommandType {
            MOVE
            CONSTRUCT_PIPE
            CULTIVATE
            EXTRACT_ORE
            EXTRACT_FOOD
        }

        enum ShockWaveCommandType {
            PROPAGATION
        }

        enum PlanetCommandType {
            MUTATE
        }

        enum WaterpipeCommandType {
            EXTRACT_WATER
        }

        RobotCommandFactory --> RobotCommandType
        ShockWaveCommandFactory --> ShockWaveCommandType
        PlanetCommandFactory --> PlanetCommandType
        WaterpipeCommandFactory --> WaterpipeCommandType
    }

@enduml