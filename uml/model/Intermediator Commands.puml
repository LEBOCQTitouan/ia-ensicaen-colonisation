@startuml
'https://plantuml.com/class-diagram

class InterMediator {
    -robotMapper: RobotMapper
    -robots: Robot[]
    -planet: Planet
    -shockWaves: ShockWave[]
    -commands: InterMediatorCommand[]
    +executeCommands()
}


package Commands {
    abstract class InterMediatorCommand {
        +execute()
    }

    InterMediator -> InterMediatorCommand

    package RobotCommands {
        abstract class RobotCommand extends InterMediatorCommand {
            -planet: Planet
            -robot: Robot
            -robotMapper: RobotMapper
        }

        class MoveRobotCommand extends RobotCommand {
            -direction: Direction
        }

        class ConstructPipeCommand extends RobotCommand {}
        class CultivateCommand extends RobotCommand {}

        abstract class ExtractCommand extends RobotCommand {}

        class ExtractOreCommand extends ExtractCommand {}
        class ExtractFoodCommand extends ExtractCommand {}
    }

    package shockWaveCommands {
        class PropagationShockWaveCommand extends InterMediatorCommand {
            -shockWave: ShockWave
            -Planet: Planet
        }
    }

    package PlanetCommands {
        class MutatePlanetCommand extends InterMediatorCommand {
            -planet: Planet
            -localisation: Coordinate
            -robotMapper: RobotMapper
        }
    }

    package factories {
        class RobotCommandFactory {
            -planet: Planet
            -robotMapper: RobotMapper
            +createMoveRobotCommand(robot: Robot, direction: Direction): MoveRobotCommand
            +createConstructPipeCommand(robot: Robot): ConstructPipeCommand
            +createCultivateCommand(robot: Robot): CultivateCommand
            +createExtractOreCommand(robot: Robot): ExtractOreCommand
            +createExtractFoodCommand(robot: Robot): ExtractFoodCommand
        }

        class ShockWaveCommandFactory {
            -planet: Planet
            +createPropagationShockWaveCommand(shockWave: ShockWave): PropagationShockWaveCommand
        }

        class PlanetCommandFactory {
            -planet: Planet
            -robotMapper: RobotMapper
            +createMutationCommand(localisation: Coordinate): MutatePlanetCommand
        }

        enum RobotCommandType {
            MOVE
            CONSTRUCT_PIPE
            CULTIVATE
            EXTRACT_ORE
            EXTRACT_FOOD
        }

        enum ShockWaveCommandType {
            PROPAGATION
        }

        enum PlanetCommandType {
            MUTATE
        }

        RobotCommandFactory --> RobotCommandType
        ShockWaveCommandFactory --> ShockWaveCommandType
        PlanetCommandFactory --> PlanetCommandType
    }
}

@enduml